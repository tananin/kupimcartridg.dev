<?php return array (
  'preserve_keys' => true,
  'update_object' => true,
  'vehicle_package' => 'transport',
  'vehicle_class' => 'xPDOObjectVehicle',
  'guid' => 'b9e1b0b4e262b047241fb359090a09bd',
  'package' => 'modx',
  'class' => 'modSnippet',
  'signature' => '5b115ea8c7a3c5415d1a0afeda0dd3c6',
  'native_key' => 19,
  'object' => '{"id":19,"source":0,"property_preprocess":0,"name":"FormItSaveForm","description":"Save any form and export them to csv.","editor_type":0,"category":13,"cache_type":0,"snippet":"\\/**\\n * FormIt\\n *\\n * Copyright 2011-12 by SCHERP Ontwikkeling <info@scherpontwikkeling.nl>\\n * Copyright 2015 by Wieger Sloot <modx@sterc.nl>\\n *\\n * FormIt is free software; you can redistribute it and\\/or modify it\\n * under the terms of the GNU General Public License as published by the Free\\n * Software Foundation; either version 2 of the License, or (at your option) any\\n * later version.\\n *\\n * FormIt is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * FormIt; if not, write to the Free Software Foundation, Inc., 59 Temple Place,\\n * Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package formit\\n *\\/\\n\\/**\\n * A custom FormIt hook for saving filled-in forms. - Based on FormSave\\n *\\n * @var modX $modx\\n * @var array $scriptProperties\\n * @var FormIt $formit\\n * @var fiHooks $hook\\n * \\n * @package formit\\n *\\/\\n\\/* setup default properties *\\/\\n$values = $hook->getValues();\\n$formName = $modx->getOption(\'formName\', $formit->config, \'form-\'.$modx->resource->get(\'id\'));\\n\\/\\/ process formName. Pick a value from the form\\n\\/\\/ Inspired from the email\'s hook of formit (fihooks.class.php)\\nif (is_string($formName)) {\\n    foreach ($fields as $k => $v) {\\n        if (is_scalar($k) && is_scalar($v)) {\\n            $formName = str_replace(\'[[+\'.$k.\']]\',$v,$formName);\\n        }\\n    }\\n}\\n\\n$formEncrypt = $modx->getOption(\'formEncrypt\', $formit->config, false);\\n$formFields = $modx->getOption(\'formFields\', $formit->config, false);\\n$fieldNames = $modx->getOption(\'fieldNames\', $formit->config, false);\\nif ($formFields) {\\n    $formFields = explode(\',\', $formFields);\\n    foreach($formFields as $k => $v) {\\n        $formFields[$k] = trim($v);\\n    }\\n}\\n\\/\\/ Build the data array\\n$dataArray = array();\\nif($formFields){\\n    foreach($formFields as $field) {\\n        $dataArray[$field] = (!isset($values[$field])) ? \'\' : $values[$field];\\n    }\\n}else{\\n    $dataArray = $values;\\n}\\n\\/\\/Change the fieldnames\\nif($fieldNames){\\n    $newDataArray = array();\\n    $fieldLabels = array();\\n    $formFieldNames = explode(\',\', $fieldNames);\\n    foreach($formFieldNames as $formFieldName){\\n        list($name, $label) = explode(\'==\', $formFieldName);\\n        $fieldLabels[trim($name)] = trim($label);\\n    }\\n    foreach ($dataArray as $key => $value) {\\n        if($fieldLabels[$key]){\\n            $newDataArray[$fieldLabels[$key]] = $value;\\n        }else{\\n            $newDataArray[$key] = $value;\\n        }\\n    }\\n    $dataArray = $newDataArray;\\n}\\n\\/\\/ Create obj\\n$newForm = $modx->newObject(\'FormItForm\');\\nif($formEncrypt){\\n    $dataArray = $newForm->encrypt($modx->toJSON($dataArray));\\n}else{\\n    $dataArray = $modx->toJSON($dataArray);\\n}\\n$newForm->fromArray(array(\\n    \'form\' => $formName,\\n    \'date\' => time(),\\n    \'values\' => $dataArray,\\n    \'ip\' => $modx->getOption(\'REMOTE_ADDR\', $_SERVER, \'\'),\\n    \'context_key\' => $modx->resource->get(\'context_key\'),\\n    \'encrypted\' => $formEncrypt\\n));\\n\\nif (!$newForm->save()) {\\n    $modx->log(modX::LOG_LEVEL_ERROR, \'[FormItSaveForm] An error occurred while trying to save the submitted form: \' . print_r($newForm->toArray(), true));\\n    return false;\\n}\\n$hook->setValue(\'savedForm\', $newForm->toArray());\\nreturn true;","locked":0,"properties":null,"moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * FormIt\\n *\\n * Copyright 2011-12 by SCHERP Ontwikkeling <info@scherpontwikkeling.nl>\\n * Copyright 2015 by Wieger Sloot <modx@sterc.nl>\\n *\\n * FormIt is free software; you can redistribute it and\\/or modify it\\n * under the terms of the GNU General Public License as published by the Free\\n * Software Foundation; either version 2 of the License, or (at your option) any\\n * later version.\\n *\\n * FormIt is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * FormIt; if not, write to the Free Software Foundation, Inc., 59 Temple Place,\\n * Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package formit\\n *\\/\\n\\/**\\n * A custom FormIt hook for saving filled-in forms. - Based on FormSave\\n *\\n * @var modX $modx\\n * @var array $scriptProperties\\n * @var FormIt $formit\\n * @var fiHooks $hook\\n * \\n * @package formit\\n *\\/\\n\\/* setup default properties *\\/\\n$values = $hook->getValues();\\n$formName = $modx->getOption(\'formName\', $formit->config, \'form-\'.$modx->resource->get(\'id\'));\\n\\/\\/ process formName. Pick a value from the form\\n\\/\\/ Inspired from the email\'s hook of formit (fihooks.class.php)\\nif (is_string($formName)) {\\n    foreach ($fields as $k => $v) {\\n        if (is_scalar($k) && is_scalar($v)) {\\n            $formName = str_replace(\'[[+\'.$k.\']]\',$v,$formName);\\n        }\\n    }\\n}\\n\\n$formEncrypt = $modx->getOption(\'formEncrypt\', $formit->config, false);\\n$formFields = $modx->getOption(\'formFields\', $formit->config, false);\\n$fieldNames = $modx->getOption(\'fieldNames\', $formit->config, false);\\nif ($formFields) {\\n    $formFields = explode(\',\', $formFields);\\n    foreach($formFields as $k => $v) {\\n        $formFields[$k] = trim($v);\\n    }\\n}\\n\\/\\/ Build the data array\\n$dataArray = array();\\nif($formFields){\\n    foreach($formFields as $field) {\\n        $dataArray[$field] = (!isset($values[$field])) ? \'\' : $values[$field];\\n    }\\n}else{\\n    $dataArray = $values;\\n}\\n\\/\\/Change the fieldnames\\nif($fieldNames){\\n    $newDataArray = array();\\n    $fieldLabels = array();\\n    $formFieldNames = explode(\',\', $fieldNames);\\n    foreach($formFieldNames as $formFieldName){\\n        list($name, $label) = explode(\'==\', $formFieldName);\\n        $fieldLabels[trim($name)] = trim($label);\\n    }\\n    foreach ($dataArray as $key => $value) {\\n        if($fieldLabels[$key]){\\n            $newDataArray[$fieldLabels[$key]] = $value;\\n        }else{\\n            $newDataArray[$key] = $value;\\n        }\\n    }\\n    $dataArray = $newDataArray;\\n}\\n\\/\\/ Create obj\\n$newForm = $modx->newObject(\'FormItForm\');\\nif($formEncrypt){\\n    $dataArray = $newForm->encrypt($modx->toJSON($dataArray));\\n}else{\\n    $dataArray = $modx->toJSON($dataArray);\\n}\\n$newForm->fromArray(array(\\n    \'form\' => $formName,\\n    \'date\' => time(),\\n    \'values\' => $dataArray,\\n    \'ip\' => $modx->getOption(\'REMOTE_ADDR\', $_SERVER, \'\'),\\n    \'context_key\' => $modx->resource->get(\'context_key\'),\\n    \'encrypted\' => $formEncrypt\\n));\\n\\nif (!$newForm->save()) {\\n    $modx->log(modX::LOG_LEVEL_ERROR, \'[FormItSaveForm] An error occurred while trying to save the submitted form: \' . print_r($newForm->toArray(), true));\\n    return false;\\n}\\n$hook->setValue(\'savedForm\', $newForm->toArray());\\nreturn true;"}',
);