<?php return array (
  'preserve_keys' => true,
  'update_object' => true,
  'vehicle_package' => 'transport',
  'vehicle_class' => 'xPDOObjectVehicle',
  'guid' => 'b94338b2ed905238571b0f427745670d',
  'package' => 'modx',
  'class' => 'modSnippet',
  'signature' => 'bce90148adef867d4b1df47d49c76760',
  'native_key' => 14,
  'object' => '{"id":14,"source":0,"property_preprocess":0,"name":"FormItRetriever","description":"Fetches a form submission for a user for displaying on a thank you page.","editor_type":0,"category":13,"cache_type":0,"snippet":"\\/**\\n * FormIt\\n *\\n * Copyright 2009-2012 by Shaun McCormick <shaun@modx.com>\\n *\\n * FormIt is free software; you can redistribute it and\\/or modify it\\n * under the terms of the GNU General Public License as published by the Free\\n * Software Foundation; either version 2 of the License, or (at your option) any\\n * later version.\\n *\\n * FormIt is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * FormIt; if not, write to the Free Software Foundation, Inc., 59 Temple Place,\\n * Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package formit\\n *\\/\\n\\/**\\n * Retrieves a prior form submission that was stored with the &store property\\n * in a FormIt call.\\n *\\n * @var modX $modx\\n * @var array $scriptProperties\\n * \\n * @package formit\\n *\\/\\nrequire_once $modx->getOption(\'formit.core_path\',null,$modx->getOption(\'core_path\').\'components\\/formit\\/\').\'model\\/formit\\/formit.class.php\';\\n$fi = new FormIt($modx,$scriptProperties);\\n\\n\\/* setup properties *\\/\\n$placeholderPrefix = $modx->getOption(\'placeholderPrefix\',$scriptProperties,\'fi.\');\\n$eraseOnLoad = $modx->getOption(\'eraseOnLoad\',$scriptProperties,false);\\n$redirectToOnNotFound = $modx->getOption(\'redirectToOnNotFound\',$scriptProperties,false);\\n\\n\\/* fetch data from cache and set to placeholders *\\/\\n$fi->loadRequest();\\n$fi->request->loadDictionary();\\n$data = $fi->request->dictionary->retrieve();\\nif (!empty($data)) {\\n    \\/* set data to placeholders *\\/\\n    foreach ($data as $k=>$v) {\\n        \\/*checkboxes & other multi-values are stored as arrays, must be imploded*\\/\\n        if (is_array($v)) {\\n            $data[$k] = implode(\',\',$v);\\n        }\\n    }\\n    $modx->toPlaceholders($data,$placeholderPrefix,\'\');\\n    \\n    \\/* if set, erase the data on load, otherwise depend on cache expiry time *\\/\\n    if ($eraseOnLoad) {\\n        $fi->request->dictionary->erase();\\n    }\\n\\/* if the data\'s not found, and we want to redirect somewhere if so, do here *\\/\\n} else if (!empty($redirectToOnNotFound)) {\\n    $url = $modx->makeUrl($redirectToOnNotFound);\\n    $modx->sendRedirect($url);\\n}\\nreturn \'\';","locked":0,"properties":"a:3:{s:17:\\"placeholderPrefix\\";a:7:{s:4:\\"name\\";s:17:\\"placeholderPrefix\\";s:4:\\"desc\\";s:31:\\"prop_fir.placeholderprefix_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:3:\\"fi.\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:20:\\"redirectToOnNotFound\\";a:7:{s:4:\\"name\\";s:20:\\"redirectToOnNotFound\\";s:4:\\"desc\\";s:34:\\"prop_fir.redirecttoonnotfound_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"eraseOnLoad\\";a:7:{s:4:\\"name\\";s:11:\\"eraseOnLoad\\";s:4:\\"desc\\";s:25:\\"prop_fir.eraseonload_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}}","moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * FormIt\\n *\\n * Copyright 2009-2012 by Shaun McCormick <shaun@modx.com>\\n *\\n * FormIt is free software; you can redistribute it and\\/or modify it\\n * under the terms of the GNU General Public License as published by the Free\\n * Software Foundation; either version 2 of the License, or (at your option) any\\n * later version.\\n *\\n * FormIt is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * FormIt; if not, write to the Free Software Foundation, Inc., 59 Temple Place,\\n * Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package formit\\n *\\/\\n\\/**\\n * Retrieves a prior form submission that was stored with the &store property\\n * in a FormIt call.\\n *\\n * @var modX $modx\\n * @var array $scriptProperties\\n * \\n * @package formit\\n *\\/\\nrequire_once $modx->getOption(\'formit.core_path\',null,$modx->getOption(\'core_path\').\'components\\/formit\\/\').\'model\\/formit\\/formit.class.php\';\\n$fi = new FormIt($modx,$scriptProperties);\\n\\n\\/* setup properties *\\/\\n$placeholderPrefix = $modx->getOption(\'placeholderPrefix\',$scriptProperties,\'fi.\');\\n$eraseOnLoad = $modx->getOption(\'eraseOnLoad\',$scriptProperties,false);\\n$redirectToOnNotFound = $modx->getOption(\'redirectToOnNotFound\',$scriptProperties,false);\\n\\n\\/* fetch data from cache and set to placeholders *\\/\\n$fi->loadRequest();\\n$fi->request->loadDictionary();\\n$data = $fi->request->dictionary->retrieve();\\nif (!empty($data)) {\\n    \\/* set data to placeholders *\\/\\n    foreach ($data as $k=>$v) {\\n        \\/*checkboxes & other multi-values are stored as arrays, must be imploded*\\/\\n        if (is_array($v)) {\\n            $data[$k] = implode(\',\',$v);\\n        }\\n    }\\n    $modx->toPlaceholders($data,$placeholderPrefix,\'\');\\n    \\n    \\/* if set, erase the data on load, otherwise depend on cache expiry time *\\/\\n    if ($eraseOnLoad) {\\n        $fi->request->dictionary->erase();\\n    }\\n\\/* if the data\'s not found, and we want to redirect somewhere if so, do here *\\/\\n} else if (!empty($redirectToOnNotFound)) {\\n    $url = $modx->makeUrl($redirectToOnNotFound);\\n    $modx->sendRedirect($url);\\n}\\nreturn \'\';"}',
);